{"version":3,"sources":["../../trailerApp/trailer-app/src/components/movie.jsx","../../trailerApp/trailer-app/src/components/detailWindow.jsx","../../trailerApp/trailer-app/src/components/movieList.jsx","../../trailerApp/trailer-app/src/components/navBar.jsx","../../trailerApp/trailer-app/src/App.js","../../trailerApp/trailer-app/src/serviceWorker.js","../../trailerApp/trailer-app/src/index.js"],"names":["Movie","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","movieDetails","movie","eventCode","activeCode","nextProps","setState","activeMovie","showDate","split","react_default","a","createElement","className","id","Col","onClick","select","width","height","src","concat","alt","React","Component","DetailWindow","details","code","url","urlArr","genre","ratings","Fragment","sm","xs","Card","title","enablejsapi","origin","autoPlay","getVideoUrl","allow","Body","Title","Text","map","g","i","Button","variant","key","Container","Row","MovieList","movies","movieCodes","getMovies","_this2","axios","get","Content-Type","Cache-Control","then","results","data","keys","apiData","_this3","detailWindow_DetailWindow","movie_Movie","setActiveMovie","renderMovies","navBar","Navbar","collapseOnSelect","expand","bg","sticky","Brand","App","components_navBar","movieList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d30b14cf.chunk.js","sourcesContent":["import React from 'react';\nimport { Col } from 'react-bootstrap';\n\n\nexport default class Movie extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movieDetails: props.movie,\n            eventCode: props.eventCode,\n            activeCode : props.activeCode\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState(nextProps);\n    }\n\n    render() {\n        let activeMovie = this.state.eventCode === this.state.activeCode;\n        let showDate = this.state.movieDetails['ShowDate'].split(',')[0];\n        return (\n            <div className={ activeMovie ? \"movieImage highlight\" : \"movieImage\"} id={this.state.eventCode}>\n                <Col>\n                    <div className={activeMovie ? \"hidden\" : \"play-container\"} onClick = {this.props.select}>\n                        <i className=\"fa fa-play-circle\"></i>\n                    </div>\n                    <div className=\"movieDate\" onClick = {this.props.select}>\n                        <div className=\"date\">{showDate}</div>\n                    </div>\n                    <img\n                        width={172}\n                        height={172}\n                        className=\"mr-3\"\n                        src={`https://in.bmscdn.com/events/moviecard/${this.state.eventCode}.jpg`}\n                        alt={this.state.movieDetails['EventTitle']}\n                        onClick = {this.props.select}\n                    />\n                    <div className=\"movieName\">\n                        {this.state.movieDetails['EventTitle']}\n                    </div>\n                </Col>\n\n            </div>\n        )\n    }\n} ","import React from 'react';\nimport { Card, Col, Button, Container, Row } from 'react-bootstrap';\n\n\nexport default class DetailWindow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            details: this.props.details,\n            activeMovie: this.props.activeCode,\n            code: this.props.details[\"EventCode\"]\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(nextProps);\n    }\n\n    getVideoUrl(url) {\n        //\"https://www.youtube.com/embed/RDUBrM0g8KI?enablejsapi=1&origin=http://localhost:3000\"\n        //https:\\/\\/www.youtube.com\\/watch?v=BuZRJZ5FVM4\n\n        let urlArr = url.split('watch?v=');\n        return urlArr[0] + 'embed/' + urlArr[1] + \"?autoplay=1&amp;origin=http://localhost:3000&amp;enablejsapi=1\";\n\n    }\n\n    render() {\n        let movieDetails = this.state.details;\n        let genre = movieDetails['EventGenre'].split('|');\n        let showDate = movieDetails[\"ShowDate\"].split(',');\n        let ratings = movieDetails['ratings'];\n        return (\n            <React.Fragment>\n                {\n                    this.state.activeCode === this.state.code ?\n                        <Col sm={12} xs={12}>\n                            <div className=\"overlay\">\n                                <img src={`https://in.bmscdn.com/events/moviecard/${this.state.activeCode}.jpg`} alt=\"\"></img>\n                            </div>\n                            <Card className=\"movieDetails\">\n                                <div className=\"embed-responsive embed-responsive-21by9\">\n                                    <iframe className=\"embed-responsive-item\" title={movieDetails['EventTitle']} enablejsapi=\"1\" origin=\"http://localhost:3000\" autoPlay=\"1\" src={this.getVideoUrl(movieDetails[\"TrailerURL\"])} allow=\"\"></iframe>\n                                </div>\n\n                                <div className=\"cardContainer\">\n                                    <Card.Body>\n                                        <Card.Title>{movieDetails[\"EventTitle\"]}</Card.Title>\n                                        <Card.Text>\n                                            {movieDetails['EventLanguage']}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            {\n                                                genre.map((g, i) => {\n                                                    if (g !== '|') {\n                                                        return <Button variant=\"outline-info\" className=\"genre\" key={i}>{g}</Button>\n                                                    }\n                                                    else {\n                                                        return null;\n                                                    }\n                                                })\n                                            }\n                                        </Card.Text>\n                                        <div className=\"flex\">\n                                            <div className=\"flex iconData\">\n                                                <i className=\"fa fa-thumbs-up\" ></i>\n                                                <div>\n                                                    <span className=\"mediumText\">{movieDetails[\"wtsPerc\"]}%</span>\n                                                    <div className=\"smallText\">{movieDetails[\"csCount\"]}</div>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex iconData\">\n                                                <i className=\"fa fa-calendar\"></i>\n                                                <div>\n                                                    <span className=\"mediumText\">{showDate[0]}</span>\n                                                    <div className=\"smallText\">{showDate[1]}</div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div className=\"footer marginNegative\">\n                                            <Container>\n                                                <Row>\n                                                    <Col className=\"center\">\n                                                        <Button variant=\"outline-info\" className=\"genre circle green\"><i className=\"fa fa-thumbs-up\"></i></Button>\n                                                        <div className=\"extraSmallText green\">\n                                                            WILL WATCH\n                                                        </div>\n                                                        <div className=\"extraSmallText green\">\n                                                            ({ratings[\"wtsCount\"]})\n                                                        </div>\n                                                    </Col>\n                                                    <Col className=\"center\">\n                                                        <Button variant=\"outline-info\" className=\"genre circle yellow\"><i className=\"fa fa-question\"></i></Button>\n                                                        <div className=\"extraSmallText yellow\">\n                                                            MAYBE\n                                                        </div>\n                                                        <div className=\"extraSmallText yellow\">\n                                                            ({ratings[\"maybe\"]})\n                                                        </div>\n                                                    </Col>\n                                                    <Col className=\"center\">\n                                                        <Button variant=\"outline-info\" className=\"genre circle red\"><i className=\"fa fa-thumbs-down\"></i></Button>\n                                                        <div className=\"extraSmallText red\">\n                                                            WON'T WATCH\n                                                        </div>\n                                                        <div className=\"extraSmallText red\">\n                                                            ({ratings[\"dwtsCount\"]})\n                                                        </div>\n                                                    </Col>\n\n                                                </Row>\n                                            </Container>\n                                        </div>\n                                    </Card.Body>\n\n                                </div>\n\n\n\n                            </Card>\n                        </Col>\n                        : null\n                }\n            </React.Fragment>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport apiData from '../data/api.json';\nimport Movie from './movie';\nimport { Container, Row } from 'react-bootstrap';\nimport DetailWindow from './detailWindow';\n\nclass MovieList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            movieCodes: [],\n            activeCode: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    getMovies() {\n        let config = {\n            'Content-Type': 'application/json',\n            \"Cache-Control\": \" no-cache\"\n        }\n        axios.get(\"https://in.bookmyshow.com/serv/getData?cmd=GETTRAILERS&mtype=cs\", config)\n            .then((results) => {\n\n                if (results.data[1]) {\n                    this.setState({ movies: results.data[1] });\n                    this.setState({\n                        movieCodes: Object.keys(results.data[1])\n                    });\n\n                }\n                //this is return when cors issue happens in chrome\n                else {\n                    this.setState({ movies: apiData[1] });\n                    this.setState({\n                        movieCodes: Object.keys(apiData[1])\n                    })\n                }\n\n            });\n    }\n\n    setActiveMovie(code) {\n        this.setState({\n            activeCode: code\n        })\n    }\n\n    renderMovies() {\n        return this.state.movieCodes.map((code, i) => {\n            return (\n                <React.Fragment key={i}>\n                    <DetailWindow details={this.state.movies[code]} activeCode={this.state.activeCode} />\n                    <div>\n                        <Movie movie={this.state.movies[code]} key={code} activeCode={this.state.activeCode} eventCode={code} select={() => {\n                            this.setActiveMovie(code)\n                        }} />\n                    </div>\n                </React.Fragment>\n            )\n        })\n    }\n    render() {\n\n        return (\n            <div>                \n                <Container>\n                    <Row>\n                        {\n                            this.renderMovies()\n                        }\n                    </Row>\n                </Container>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default MovieList;","import React from 'react';\nimport {Navbar, Button} from 'react-bootstrap';\n\n\nfunction navBar() {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\n                <Navbar.Brand>Movie Trailer</Navbar.Brand>\n                <Navbar.Text>\n                    <Button variant=\"outline-info\" className=\"navigation\">Coming Soon</Button>\n                    <Button variant=\"outline-info\" className=\"navigation\">Now Showing</Button>\n                </Navbar.Text>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default navBar;","import React from 'react';\nimport './App.css';\nimport MovieList from './components/movieList';\nimport NavBar from './components/navBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <MovieList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}